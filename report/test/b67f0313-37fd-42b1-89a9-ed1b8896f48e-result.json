{"name": "mine_02", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: The element 'By.id: cn.missevan:id/auto_close' is not linked to the same object in DOM anymore\nStacktrace:\nio.appium.uiautomator2.common.exceptions.StaleElementReferenceException: The element 'By.id: cn.missevan:id/auto_close' is not linked to the same object in DOM anymore\n\tat io.appium.uiautomator2.model.ElementsCache.restore(ElementsCache.java:122)\n\tat io.appium.uiautomator2.model.ElementsCache.get(ElementsCache.java:153)\n\tat io.appium.uiautomator2.handler.GetText.safeHandle(GetText.java:20)\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:59)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:920)", "trace": "测试类名称：mine_02 \n输入参数：{'method': 'get_text', 'element': 'cn.missevan:id/auto_close', 'name': '判断我的 - 闹钟是否有「播完后关闭」字样', 'assert_text': '播完后关闭', 'time': 5, 'type': 'id'} \n错误信息：(\"The element 'By.id: cn.missevan:id/auto_close' is not linked to the same object in DOM anymore\", None, [\"io.appium.uiautomator2.common.exceptions.StaleElementReferenceException: The element 'By.id: cn.missevan:id/auto_close' is not linked to the same object in DOM anymore\", '\\tat io.appium.uiautomator2.model.ElementsCache.restore(ElementsCache.java:122)', '\\tat io.appium.uiautomator2.model.ElementsCache.get(ElementsCache.java:153)', '\\tat io.appium.uiautomator2.handler.GetText.safeHandle(GetText.java:20)', '\\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:59)', '\\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)', '\\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)', '\\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)', '\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)', '\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)', '\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)', '\\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)', '\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)', '\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)', '\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)', '\\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)', '\\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)', '\\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)', '\\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)', '\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)', '\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)', '\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)', '\\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)', '\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)', '\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)', '\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)', '\\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)', '\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)', '\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)', '\\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)', '\\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)', '\\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)', '\\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)', '\\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)', '\\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)', '\\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)', '\\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)', '\\tat java.lang.Thread.run(Thread.java:920)', ''])"}, "description": "用例开始时间:2023-06-20 18:40:56.999822", "steps": [{"name": "检查：'点击启动音'", "status": "passed", "start": 1687257657279, "stop": 1687257658037}, {"name": "检查：'判断标题是否启动音'", "status": "passed", "start": 1687257658153, "stop": 1687257658502}, {"name": "检查：'点击闹钟'", "status": "passed", "start": 1687257661493, "stop": 1687257662082}, {"name": "检查：'判断标题是否为铃声推荐'", "status": "passed", "start": 1687257662168, "stop": 1687257662517}, {"name": "检查：'点击定时关闭'", "status": "passed", "start": 1687257665063, "stop": 1687257665294}, {"name": "检查：'选择「播放完当前音」'", "status": "passed", "start": 1687257666435, "stop": 1687257667021}, {"name": "检查：'判断我的 - 闹钟是否有「播完后关闭」字样'", "status": "passed", "start": 1687257667101, "stop": 1687257667395}], "attachments": [{"name": "失败截图", "source": "e130cdb1-4f29-447a-9bd5-e11d66038213-attachment.png", "type": "image/png"}, {"name": "APPlog", "source": "68a1af1c-95e1-4176-af40-545440e1e67c-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "69968d1a-1eaf-46d4-b642-011eb70caad8-attachment.txt", "type": "text/plain"}], "start": 1687257657000, "stop": 1687257667588, "uuid": "036f9cb6-396f-444f-b654-813eae5a0f72", "historyId": "37c1e8afcef552d72701a5e73186427f", "testCaseId": "b87b181bae4c1137d6cf24fbef875765", "fullName": "tests.test_case.test14_mine_other#mine_02", "labels": [{"name": "parentSuite", "value": "tests.test_case"}, {"name": "suite", "value": "test14_mine_other"}, {"name": "host", "value": "guozhierdeMacBook-Air.local"}, {"name": "thread", "value": "3293-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_case.test14_mine_other"}]}